/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.File;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import model.Person;

/**
 *
 * @author Ketki Kule <kule.k@northeastern.edu>
 */
public class CreateJPanel extends javax.swing.JPanel {

    private Person person;
    private String biometricIdentifiers;
    private String fullFacePhoto;

    /**
     * Creates new form CreateJPanel
     */
    public CreateJPanel(Person person) {
        initComponents();
        this.person = person;
        this.setAutoscrolls(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblStreet = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        lblPincode = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtStreet = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        txtPincode = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblDob = new javax.swing.JLabel();
        txtDob = new javax.swing.JTextField();
        lblTelNum = new javax.swing.JLabel();
        txtTelNum = new javax.swing.JTextField();
        lblFaxNum = new javax.swing.JLabel();
        txtFaxNumber = new javax.swing.JTextField();
        lblEmailAddr = new javax.swing.JLabel();
        txtEmailAddr = new javax.swing.JTextField();
        lblSsn = new javax.swing.JLabel();
        txtSsn = new javax.swing.JTextField();
        lblMedicalRecord = new javax.swing.JLabel();
        txtMedicalRecord = new javax.swing.JTextField();
        lblHealthPlanBeneficiary = new javax.swing.JLabel();
        txtHealthPlanBeneficiary = new javax.swing.JTextField();
        lblBankAccNum = new javax.swing.JLabel();
        txtBankAccNum = new javax.swing.JTextField();
        lblCertLicenseNum = new javax.swing.JLabel();
        txtCertLicenseNum = new javax.swing.JTextField();
        lblVehicleIdentifiers = new javax.swing.JLabel();
        txtVehicleIdentifiers = new javax.swing.JTextField();
        lblDevIdentifiers = new javax.swing.JLabel();
        txtDeviceIdentifiers = new javax.swing.JTextField();
        lblLinkedIn = new javax.swing.JLabel();
        txtLinkedIn = new javax.swing.JTextField();
        lblIpAddr = new javax.swing.JLabel();
        txtIpAddr = new javax.swing.JTextField();
        lblBiometricIdentifiers = new javax.swing.JLabel();
        btnBiometricIdentifier = new javax.swing.JButton();
        lblFullFacePhoto = new javax.swing.JLabel();
        btnFullFacePhoto = new javax.swing.JButton();
        lblUniqueIdentifyingNo = new javax.swing.JLabel();
        txtUniqueIdentifyingNo = new javax.swing.JTextField();

        setAutoscrolls(true);

        lblTitle.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("CREATE PERSON PROFILE");

        lblName.setText("Name:");

        lblStreet.setText("Street:");

        lblCity.setText("City:");

        lblCountry.setText("Country:");

        lblPincode.setText("Pincode:");

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStreetActionPerformed(evt);
            }
        });

        txtCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryActionPerformed(evt);
            }
        });

        txtPincode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPincodeActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblDob.setText("Date Of Birth (dd/MM/yyyy) :");

        txtDob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDobActionPerformed(evt);
            }
        });

        lblTelNum.setText("Telephone No:");

        txtTelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelNumActionPerformed(evt);
            }
        });

        lblFaxNum.setText("Fax Number:");

        txtFaxNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFaxNumberActionPerformed(evt);
            }
        });

        lblEmailAddr.setText("Email Address:");

        txtEmailAddr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailAddrActionPerformed(evt);
            }
        });

        lblSsn.setText("Social Security Number(AAA-GG-SSSS):");

        txtSsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSsnActionPerformed(evt);
            }
        });

        lblMedicalRecord.setText("Medical Record Number:");

        txtMedicalRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicalRecordActionPerformed(evt);
            }
        });

        lblHealthPlanBeneficiary.setText("Health Plan Beneficiary Number:");

        txtHealthPlanBeneficiary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHealthPlanBeneficiaryActionPerformed(evt);
            }
        });

        lblBankAccNum.setText("Bank Account Numbers:");

        txtBankAccNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBankAccNumActionPerformed(evt);
            }
        });

        lblCertLicenseNum.setText("Certficate/License Number:");

        txtCertLicenseNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCertLicenseNumActionPerformed(evt);
            }
        });

        lblVehicleIdentifiers.setText("Vehicle Identifiers & Serial No Including License Plates:");

        txtVehicleIdentifiers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleIdentifiersActionPerformed(evt);
            }
        });

        lblDevIdentifiers.setText("Device Identifiers & Serial Numbers:");

        txtDeviceIdentifiers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceIdentifiersActionPerformed(evt);
            }
        });

        lblLinkedIn.setText("LinkedIn");

        txtLinkedIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkedInActionPerformed(evt);
            }
        });

        lblIpAddr.setText("Internet Protocol Addresses:");

        txtIpAddr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIpAddrActionPerformed(evt);
            }
        });

        lblBiometricIdentifiers.setText("Biometric Identifiers:");

        btnBiometricIdentifier.setText("Open File");
        btnBiometricIdentifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBiometricIdentifierActionPerformed(evt);
            }
        });

        lblFullFacePhoto.setText("Full Face Photo");

        btnFullFacePhoto.setText("Open File");
        btnFullFacePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFullFacePhotoActionPerformed(evt);
            }
        });

        lblUniqueIdentifyingNo.setText("Unique Identifying Number:");

        txtUniqueIdentifyingNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUniqueIdentifyingNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblStreet)
                            .addComponent(lblCity)
                            .addComponent(lblCountry)
                            .addComponent(lblPincode)
                            .addComponent(lblDob)
                            .addComponent(lblTelNum)
                            .addComponent(lblFaxNum)
                            .addComponent(lblEmailAddr)
                            .addComponent(lblSsn)
                            .addComponent(lblMedicalRecord)
                            .addComponent(lblHealthPlanBeneficiary)
                            .addComponent(lblCertLicenseNum)
                            .addComponent(lblBankAccNum)
                            .addComponent(lblVehicleIdentifiers)
                            .addComponent(lblDevIdentifiers)
                            .addComponent(lblLinkedIn)
                            .addComponent(lblIpAddr)
                            .addComponent(lblBiometricIdentifiers)
                            .addComponent(lblFullFacePhoto)
                            .addComponent(lblUniqueIdentifyingNo))
                        .addGap(111, 111, 111)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUniqueIdentifyingNo, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVehicleIdentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHealthPlanBeneficiary, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMedicalRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmailAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFaxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBankAccNum, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCertLicenseNum, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDeviceIdentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLinkedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIpAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBiometricIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFullFacePhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 589, Short.MAX_VALUE))
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(354, 354, 354)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCity, txtCountry, txtName, txtPincode, txtStreet});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStreet)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCountry)
                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPincode)
                    .addComponent(txtPincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDob)
                    .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelNum)
                    .addComponent(txtTelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFaxNum)
                    .addComponent(txtFaxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmailAddr)
                    .addComponent(txtEmailAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSsn)
                    .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMedicalRecord)
                    .addComponent(txtMedicalRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHealthPlanBeneficiary)
                    .addComponent(txtHealthPlanBeneficiary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBankAccNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBankAccNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCertLicenseNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCertLicenseNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehicleIdentifiers)
                    .addComponent(txtVehicleIdentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDeviceIdentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDevIdentifiers))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLinkedIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLinkedIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIpAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIpAddr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBiometricIdentifier)
                    .addComponent(lblBiometricIdentifiers))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFullFacePhoto)
                    .addComponent(lblFullFacePhoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUniqueIdentifyingNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUniqueIdentifyingNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCity, txtCountry, txtName, txtPincode, txtStreet});

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1110, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBiometricIdentifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBiometricIdentifierActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            biometricIdentifiers = selectedFile.getAbsolutePath();
        }
    }//GEN-LAST:event_btnBiometricIdentifierActionPerformed

    private void txtIpAddrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIpAddrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIpAddrActionPerformed

    private void txtLinkedInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkedInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkedInActionPerformed

    private void txtDeviceIdentifiersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceIdentifiersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceIdentifiersActionPerformed

    private void txtVehicleIdentifiersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleIdentifiersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleIdentifiersActionPerformed

    private void txtCertLicenseNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCertLicenseNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCertLicenseNumActionPerformed

    private void txtBankAccNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBankAccNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBankAccNumActionPerformed

    private void txtHealthPlanBeneficiaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHealthPlanBeneficiaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHealthPlanBeneficiaryActionPerformed

    private void txtMedicalRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicalRecordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicalRecordActionPerformed

    private void txtSsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSsnActionPerformed

    private void txtEmailAddrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailAddrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailAddrActionPerformed

    private void txtFaxNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFaxNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFaxNumberActionPerformed

    private void txtTelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelNumActionPerformed

    private void txtDobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDobActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        boolean isInputValidated = true;
        String name = txtName.getText();
        String street = txtStreet.getText();
        String city = txtCity.getText();
        String country = txtCountry.getText();
        String pinCode = txtPincode.getText();
        String dob = txtDob.getText();
        String telPhone = txtTelNum.getText();
        String faxNumber = txtFaxNumber.getText();
        String emailAddr = txtEmailAddr.getText();
        String socialSecurityNum = txtSsn.getText();
        String medicalRecordNum = txtMedicalRecord.getText();
        String healthPlanBenNum = txtHealthPlanBeneficiary.getText();
        String bankAccNum = txtBankAccNum.getText();
        String certLicenseNum = txtCertLicenseNum.getText();
        String vehicleIdentifiers = txtVehicleIdentifiers.getText();
        String deviceIdentifiers = txtDeviceIdentifiers.getText();
        String linkedIn = txtLinkedIn.getText();
        String ipAddress = txtIpAddr.getText();
        String uniqueNumber = txtUniqueIdentifyingNo.getText();

        if (name.isEmpty() || street.isEmpty() || city.isEmpty() || country.isEmpty() || pinCode.isEmpty() || dob.isEmpty()
                || telPhone.isEmpty() || faxNumber.isEmpty() || emailAddr.isEmpty() || socialSecurityNum.isEmpty() || medicalRecordNum.isEmpty() || healthPlanBenNum.isEmpty()
                || bankAccNum.isEmpty() || certLicenseNum.isEmpty() || vehicleIdentifiers.isEmpty() || deviceIdentifiers.isEmpty() || linkedIn.isEmpty() || ipAddress.isEmpty()
                || biometricIdentifiers.isEmpty() || fullFacePhoto.isEmpty()) {
            isInputValidated = false;
            JOptionPane.showMessageDialog(this, "Please fill all the fields", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {

            if (!validatePincode(pinCode)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid pincode", "ERROR", JOptionPane.WARNING_MESSAGE);

            }

            if (!validateDob(dob)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid Date Of Birth", "ERROR", JOptionPane.WARNING_MESSAGE);
            }

            if (!validateTelNum(telPhone)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid Tel Number", "ERROR", JOptionPane.WARNING_MESSAGE);
            }

            if (!validateFaxNum(faxNumber)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid Fax Number", "ERROR", JOptionPane.WARNING_MESSAGE);
            }

            if (!validateEmailAddr(emailAddr)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid Email Address", "ERROR", JOptionPane.WARNING_MESSAGE);
            }

            if (!validateSSN(socialSecurityNum)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid Social Security Number", "ERROR", JOptionPane.WARNING_MESSAGE);
            }

            if (!validateMedicalRecordNum(medicalRecordNum)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid Medical Record Number", "ERROR", JOptionPane.WARNING_MESSAGE);
            }

            if (!validateIPAddress(ipAddress)) {
                //pattern does not match
                isInputValidated = false;
                JOptionPane.showMessageDialog(this, "Invalid IP Address", "ERROR", JOptionPane.WARNING_MESSAGE);
            }
            if (isInputValidated) {
                person.setName(name);
                person.setStreet(street);
                person.setCity(city);
                person.setCountry(country);
                person.setPincode(pinCode);
                person.setBirthDate(convertStringToDate(dob));
                person.setMobileNumber(Long.parseLong(telPhone));
                person.setFaxNumber(Long.parseLong(faxNumber));
                person.setEmailAddr(emailAddr);
                person.setSocialSecurityNum(socialSecurityNum);
                person.setMedicalRecordNum(Integer.parseInt(medicalRecordNum));
                person.setHealthPlanNum(healthPlanBenNum);
                person.setBankAccNum(bankAccNum);
                person.setCertificateNum(certLicenseNum);
                person.setVehicleIdentifiers(vehicleIdentifiers);
                person.setDeviceIdentifiers(deviceIdentifiers);
                person.setLinkedInId(linkedIn);
                person.setIpAddr(ipAddress);
                person.setBiometricIdentifier(biometricIdentifiers);
                person.setPhotographicImg(fullFacePhoto);
                person.setUniqueNum(uniqueNumber);
                JOptionPane.showMessageDialog(this, "Product Information Saved");
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtPincodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPincodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPincodeActionPerformed

    private void txtCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryActionPerformed

    private void txtStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStreetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStreetActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void btnFullFacePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFullFacePhotoActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            fullFacePhoto = selectedFile.getAbsolutePath();
        }
    }//GEN-LAST:event_btnFullFacePhotoActionPerformed

    private void txtUniqueIdentifyingNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUniqueIdentifyingNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUniqueIdentifyingNoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBiometricIdentifier;
    private javax.swing.JButton btnFullFacePhoto;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBankAccNum;
    private javax.swing.JLabel lblBiometricIdentifiers;
    private javax.swing.JLabel lblCertLicenseNum;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblDevIdentifiers;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmailAddr;
    private javax.swing.JLabel lblFaxNum;
    private javax.swing.JLabel lblFullFacePhoto;
    private javax.swing.JLabel lblHealthPlanBeneficiary;
    private javax.swing.JLabel lblIpAddr;
    private javax.swing.JLabel lblLinkedIn;
    private javax.swing.JLabel lblMedicalRecord;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblSsn;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JLabel lblTelNum;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUniqueIdentifyingNo;
    private javax.swing.JLabel lblVehicleIdentifiers;
    private javax.swing.JTextField txtBankAccNum;
    private javax.swing.JTextField txtCertLicenseNum;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtDeviceIdentifiers;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtEmailAddr;
    private javax.swing.JTextField txtFaxNumber;
    private javax.swing.JTextField txtHealthPlanBeneficiary;
    private javax.swing.JTextField txtIpAddr;
    private javax.swing.JTextField txtLinkedIn;
    private javax.swing.JTextField txtMedicalRecord;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPincode;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtTelNum;
    private javax.swing.JTextField txtUniqueIdentifyingNo;
    private javax.swing.JTextField txtVehicleIdentifiers;
    // End of variables declaration//GEN-END:variables

    private boolean validatePincode(String pincode) {
        String pinCodeRegex = "^[0-9]{5}(?:-[0-9]{4})?$";
        if (Pattern.matches(pinCodeRegex, pincode)) {
            return true;
        } else {
            return false;
        }

    }

    private boolean validateDob(String dob) {
        String dobRegex = "(^(((0[1-9]|1[0-9]|2[0-8])[\\/](0[1-9]|1[012]))|((29|30|31)[\\/](0[13578]|1[02]))|((29|30)[\\/](0[4,6,9]|11)))[\\/](19|[2-9][0-9])\\d\\d$)|(^29[\\/]02[\\/](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)$)";
        if (Pattern.matches(dobRegex, dob)) {
            return true;
        } else {
            return false;
        }
    }

    private boolean validateTelNum(String telPhone) {
        String telNumberRegex = "\\d{10}";
        if (Pattern.matches(telNumberRegex, telPhone)) {
            return true;
        } else {
            return false;
        }
    }

    private boolean validateFaxNum(String faxNum) {
        String faxNumberRegex = "\\d{10}";
        if (Pattern.matches(faxNumberRegex, faxNum)) {
            return true;
        } else {
            return false;
        }
    }

    private boolean validateEmailAddr(String emailId) {
        String emailIdRegex = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        if (Pattern.matches(emailIdRegex, emailId)) {
            return true;
        } else {
            return false;
        }
    }

    private boolean validateSSN(String socialSecurityNum) {
        String ssnRegex = "^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$";
        if (Pattern.matches(ssnRegex, socialSecurityNum)) {
            return true;
        } else {
            return false;
        }
    }

    private boolean validateMedicalRecordNum(String medicalRecordNum) {
        String medicalRecordRegex = "^\\d{6}$";
        if (Pattern.matches(medicalRecordRegex, medicalRecordNum)) {
            return true;
        } else {
            return false;
        }
    }

    private boolean validateIPAddress(String ipAddress) {
        String ipAddrRegex = "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\.(?!$)|$)){4}$";
        if (Pattern.matches(ipAddrRegex, ipAddress)) {
            return true;
        } else {
            return false;
        }
    }

    private LocalDate convertStringToDate(String strDate) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate date = LocalDate.parse(strDate, formatter);
        return date;

    }

}
