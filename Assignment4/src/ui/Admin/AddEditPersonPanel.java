/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Admin;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.City;
import model.Community;
import model.House;
import model.Person;
import model.System;

/**
 *
 * @author Ketki Kule <kule.k@northeastern.edu>
 */
public class AddEditPersonPanel extends javax.swing.JPanel {

    JPanel displayPanel;
    System system;

    /**
     * Creates new form AddEditPersonPanel
     */
    public AddEditPersonPanel(JPanel displayPanel, System system) {
        initComponents();
        this.displayPanel = displayPanel;
        this.system = system;
        loadData();

    }

    private void loadData() {
        for (City c : system.getCityDirectory().getCityList()) {
            cbCity.addItem(c.getCityName());
        }

        /*for (Community community : system.getCityDirectory().getCityList().get(0).getCommunityList()) {
            cbCommunity.addItem(community.getName());
        }*/

 /*for (House h : system.getCityDirectory().getCityList().get(0).getCommunityList().get(0).getHouseList()) {
            cbHouse.addItem(h.getAddress());
        }*/
        addHouse();
    }

    private void addHouse() {
        if (cbNewHouse.isSelected()) {
            lblAddress.setVisible(true);
            txtAddress.setVisible(true);
            lblAptNo.setVisible(true);
            txtAptNo.setVisible(true);
            lblResidents.setVisible(true);
            txtResidents.setVisible(true);
            lblZipCode.setVisible(true);
            txtZipCode.setVisible(true);
        } else {
            lblAddress.setVisible(false);
            txtAddress.setVisible(false);
            lblAptNo.setVisible(false);
            txtAptNo.setVisible(false);
            lblResidents.setVisible(false);
            txtResidents.setVisible(false);
            lblZipCode.setVisible(false);
            txtZipCode.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblTelNo = new javax.swing.JLabel();
        txtTelNo = new javax.swing.JTextField();
        lblIdNo = new javax.swing.JLabel();
        txtIdNo = new javax.swing.JTextField();
        lblBloodGroup = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        lblAddHouse = new javax.swing.JLabel();
        lblAptNo = new javax.swing.JLabel();
        txtAptNo = new javax.swing.JTextField();
        cbCity = new javax.swing.JComboBox<>();
        cbNewHouse = new javax.swing.JCheckBox();
        lblResidents = new javax.swing.JLabel();
        txtResidents = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        cbCommunity = new javax.swing.JComboBox<>();
        cbHouse = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        lblZipCode = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        cbBloodGroup = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(134, 118, 102));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(213, 195, 170), 2, true));
        setPreferredSize(new java.awt.Dimension(1115, 670));

        lblTitle.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add Person");

        btnBack.setBackground(new java.awt.Color(234, 226, 214));
        btnBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(134, 118, 102));
        btnBack.setText("<< Back");
        btnBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.setContentAreaFilled(false);
        btnBack.setOpaque(true);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblFirstName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(255, 255, 255));
        lblFirstName.setText("First Name :");

        txtFirstName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblLastName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(255, 255, 255));
        lblLastName.setText("Last Name :");

        txtLastName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblAge.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblAge.setForeground(new java.awt.Color(255, 255, 255));
        lblAge.setText("Age :");

        txtAge.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblTelNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTelNo.setForeground(new java.awt.Color(255, 255, 255));
        lblTelNo.setText("Telephone No :");

        txtTelNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblIdNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblIdNo.setForeground(new java.awt.Color(255, 255, 255));
        lblIdNo.setText("Personal Identity Number :");

        txtIdNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblBloodGroup.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblBloodGroup.setForeground(new java.awt.Color(255, 255, 255));
        lblBloodGroup.setText("Blood Group :");

        lblCity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCity.setForeground(new java.awt.Color(255, 255, 255));
        lblCity.setText("Select City :");

        lblCommunity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(255, 255, 255));
        lblCommunity.setText("Select Community :");

        lblHouse.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHouse.setForeground(new java.awt.Color(255, 255, 255));
        lblHouse.setText("Select House :");

        lblAddHouse.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblAddHouse.setForeground(new java.awt.Color(255, 255, 255));
        lblAddHouse.setText("Add New House :");

        lblAptNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblAptNo.setForeground(new java.awt.Color(255, 255, 255));
        lblAptNo.setText("Apt No :");

        txtAptNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCityActionPerformed(evt);
            }
        });

        cbNewHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNewHouseActionPerformed(evt);
            }
        });

        lblResidents.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblResidents.setForeground(new java.awt.Color(255, 255, 255));
        lblResidents.setText("No Of Residents :");

        txtResidents.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblAddress.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setText("Address :");

        txtAddress.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cbCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCommunityActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(234, 226, 214));
        btnSave.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSave.setForeground(new java.awt.Color(134, 118, 102));
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.setContentAreaFilled(false);
        btnSave.setOpaque(true);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblZipCode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblZipCode.setForeground(new java.awt.Color(255, 255, 255));
        lblZipCode.setText("ZipCode :");

        txtZipCode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cbBloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        cbBloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBloodGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                .addGap(489, 489, 489))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139)
                        .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblIdNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtIdNo, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAptNo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtAptNo, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblResidents, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtResidents, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(139, 139, 139)
                            .addComponent(cbCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(139, 139, 139)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAddHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(139, 139, 139)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbNewHouse)
                                .addComponent(cbHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(617, 617, 617))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbNewHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAptNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAptNo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblResidents, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtResidents, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCityActionPerformed
        // TODO add your handling code here:
        cbCommunity.removeAllItems();

        java.lang.System.out.println("City selected" + cbCity.getSelectedIndex());
        for (Community community : system.getCityDirectory().getCityList().get(cbCity.getSelectedIndex()).getCommunityList()) {
            cbCommunity.addItem(community.getCommunityName());
        }

        /*cbHouse.removeAllItems();
        for (House h : system.getCityDirectory().getCityList().get(cbCity.getSelectedIndex()).getCommunityList().get(cbCommunity.getSelectedIndex()).getHouseList()) {
            cbHouse.addItem(h.getAddress());
        }*/

    }//GEN-LAST:event_cbCityActionPerformed

    private void cbCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCommunityActionPerformed
        // TODO add your handling code here:
        java.lang.System.out.println("community selected" + cbCommunity.getSelectedIndex());
        if (cbCommunity.getItemCount() > 0) {
            cbHouse.removeAllItems();
            java.lang.System.out.println("community loop" + cbHouse.getItemCount());

            for (House h : system.getCityDirectory().getCityList().get(cbCity.getSelectedIndex()).getCommunityList().get(cbCommunity.getSelectedIndex()).getHouseList()) {
                cbHouse.addItem(h.getAddress());
            }
        }
    }//GEN-LAST:event_cbCommunityActionPerformed

    private void cbNewHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNewHouseActionPerformed
        // TODO add your handling code here:
        addHouse();
    }//GEN-LAST:event_cbNewHouseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int personID = system.getPersonDirectory().getPersonsList().size();

        if (txtFirstName.getText().length() > 0 && txtLastName.getText().length() > 0
                && txtTelNo.getText().length() > 0 && txtAge.getText().length() > 0 && txtIdNo.getText().length() > 0) {
            House house = null;
            boolean isValidated = true;
            String numericRegex = "[1-9][0-9]*";

            if (cbNewHouse.isSelected()) { //adding new house 
                if (txtAptNo.getText().length() > 0 && txtAddress.getText().length() > 0 && txtResidents.getText().length() > 0 && txtZipCode.getText().length() > 0) {
                    //validate zipcode 
                    String pinCodeRegex = "^[0-9]{5}(?:-[0-9]{4})?$";
                    if (Pattern.matches(pinCodeRegex, txtZipCode.getText())) {
                        if (Pattern.matches(numericRegex, txtAptNo.getText())) {
                            if (Pattern.matches(numericRegex, txtResidents.getText())) {
                                house = new House(Integer.parseInt(txtAptNo.getText()), Integer.parseInt(txtResidents.getText()), txtAddress.getText(), txtZipCode.getText(),
                                        cbCity.getSelectedIndex(), cbCommunity.getSelectedIndex());
                            } else {
                                isValidated = false;
                                JOptionPane.showMessageDialog(null, "Please Enter Valid Residents Count ", "Invalid Residents Count", JOptionPane.WARNING_MESSAGE);
                            }
                        } else {
                            isValidated = false;
                            JOptionPane.showMessageDialog(null, "Please Enter Valid Apt No ", "Invalid Apt Number", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        isValidated = false;
                        JOptionPane.showMessageDialog(null, "Please Enter Valid Pincode ", "Invalid Pincode", JOptionPane.WARNING_MESSAGE);
                    }

                } else {
                    isValidated = false;
                    JOptionPane.showMessageDialog(null, "Please Fill All Fields ", "Empty Fields", JOptionPane.WARNING_MESSAGE);
                }
            } else { //person of existing house 
                house = system.getCityDirectory().getCityList().get(cbCity.getSelectedIndex()).getCommunityList().get(cbCommunity.getSelectedIndex()).getHouseList().get(cbHouse.getSelectedIndex());
            }
            //validate Age 
            if (!Pattern.matches(numericRegex, txtAge.getText()) || Integer.parseInt(txtAge.getText()) > 200) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Age ", "Invalid Age Field", JOptionPane.WARNING_MESSAGE);
            }

            //validate mobileNo
            String telNumberRegex = "\\d{10}";
            if (!Pattern.matches(telNumberRegex, txtTelNo.getText())) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Telephone No ", "Invalid Telephone No", JOptionPane.WARNING_MESSAGE);
            }

            if (isValidated) {
                Person person = new Person(personID + 1, txtFirstName.getText(), txtLastName.getText(), Integer.parseInt(txtAge.getText()), Long.parseLong(txtTelNo.getText()), txtIdNo.getText(),
                        cbBloodGroup.getSelectedItem().toString(), house);
                //validate for duplicate 
                for (Person p : system.getPersonDirectory().getPersonsList()) {
                    if (p.getFullName().equalsIgnoreCase(person.getFullName()) && p.getPersonalIdNo().equalsIgnoreCase(person.getPersonalIdNo())) {
                        JOptionPane.showMessageDialog(null, "Person Information Already Exists ", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
                        isValidated = false;
                        break;
                    }
                }
                if (isValidated) {
                    system.getPersonDirectory().getPersonsList().add(person);
                    JOptionPane.showMessageDialog(null, "Successfully Added Person ", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please Fill All Fields ", "Empty Fields", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cbBloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBloodGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBloodGroupActionPerformed

    private void backAction() {
        displayPanel.remove(this);
        Component[] componentArray = displayPanel.getComponents();
        Component c = componentArray[componentArray.length - 1];
        ManagePersonJPanel ms = (ManagePersonJPanel) c;
        ms.refreshTable();
        CardLayout layout = (CardLayout) displayPanel.getLayout();
        layout.previous(displayPanel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbBloodGroup;
    private javax.swing.JComboBox<String> cbCity;
    private javax.swing.JComboBox<String> cbCommunity;
    private javax.swing.JComboBox<String> cbHouse;
    private javax.swing.JCheckBox cbNewHouse;
    private javax.swing.JLabel lblAddHouse;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAptNo;
    private javax.swing.JLabel lblBloodGroup;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblIdNo;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblResidents;
    private javax.swing.JLabel lblTelNo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAptNo;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtIdNo;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtResidents;
    private javax.swing.JTextField txtTelNo;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
