/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Patient;

import ui.Admin.*;
import java.awt.CardLayout;
import java.awt.Component;
import java.sql.Timestamp;
import java.time.Instant;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.City;
import model.Community;
import model.Encounter;
import model.House;
import model.Patient;
import model.Person;
import model.System;
import model.VitalSigns;

/**
 *
 * @author Ketki Kule <kule.k@northeastern.edu>
 */
public class AddEditEncounterPanel extends javax.swing.JPanel {

    JPanel displayPanel;
    System system;
    Patient patient;
    int operationId;
    Encounter encounter;

    /**
     * Creates new form AddEditPersonPanel
     */
    public AddEditEncounterPanel(JPanel displayPanel, System system, Patient patient, int operationId, Encounter encounter) {
        initComponents();
        this.displayPanel = displayPanel;
        this.system = system;
        this.patient = patient;
        this.operationId = operationId;
        this.encounter = encounter;
        loadData();
    }

    private void loadData() {
        if (operationId == 1) {
            txtBodyTemp.setText(encounter.getVitalSigns().getBodyTemp() + "");
            txtPulseRate.setText(encounter.getVitalSigns().getPulseRate() + "");
            txtRespirationRate.setText(encounter.getVitalSigns().getRespirationRate() + "");
            txtSystolicPressure.setText(encounter.getVitalSigns().getSystolicPressure() + "");
            txtDiastolicPressure.setText(encounter.getVitalSigns().getDiastolicPressure() + "");
            txtWeight.setText(encounter.getVitalSigns().getWeight() + "");
            txtHeight.setText(encounter.getVitalSigns().getHeight() + "");

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblBodyTemp = new javax.swing.JLabel();
        txtBodyTemp = new javax.swing.JTextField();
        lblPulseRate = new javax.swing.JLabel();
        txtPulseRate = new javax.swing.JTextField();
        lblRespirationRate = new javax.swing.JLabel();
        txtRespirationRate = new javax.swing.JTextField();
        lblSystolicPressure = new javax.swing.JLabel();
        txtSystolicPressure = new javax.swing.JTextField();
        lblDiastolicPressure = new javax.swing.JLabel();
        txtDiastolicPressure = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(134, 118, 102));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(213, 195, 170), 2, true));
        setPreferredSize(new java.awt.Dimension(1115, 670));

        lblTitle.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add Encounter");

        btnBack.setBackground(new java.awt.Color(234, 226, 214));
        btnBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(134, 118, 102));
        btnBack.setText("<< Back");
        btnBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.setContentAreaFilled(false);
        btnBack.setOpaque(true);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblBodyTemp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblBodyTemp.setForeground(new java.awt.Color(255, 255, 255));
        lblBodyTemp.setText("Body Temperature (F) :");

        txtBodyTemp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblPulseRate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPulseRate.setForeground(new java.awt.Color(255, 255, 255));
        lblPulseRate.setText("Pulse Rate (beats/min) :");

        txtPulseRate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblRespirationRate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblRespirationRate.setForeground(new java.awt.Color(255, 255, 255));
        lblRespirationRate.setText("Respiration Rate (breaths/min):");

        txtRespirationRate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblSystolicPressure.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSystolicPressure.setForeground(new java.awt.Color(255, 255, 255));
        lblSystolicPressure.setText("Systolic Pressure :");

        txtSystolicPressure.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblDiastolicPressure.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDiastolicPressure.setForeground(new java.awt.Color(255, 255, 255));
        lblDiastolicPressure.setText("Diastolic Pressure :");

        txtDiastolicPressure.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblWeight.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblWeight.setForeground(new java.awt.Color(255, 255, 255));
        lblWeight.setText("Weight (kg):");

        txtWeight.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblHeight.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHeight.setForeground(new java.awt.Color(255, 255, 255));
        lblHeight.setText("Height (cm):");

        txtHeight.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnSave.setBackground(new java.awt.Color(234, 226, 214));
        btnSave.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSave.setForeground(new java.awt.Color(134, 118, 102));
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.setContentAreaFilled(false);
        btnSave.setOpaque(true);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addGap(489, 489, 489))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(txtBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(txtRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSystolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(txtSystolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDiastolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(txtDiastolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(413, 413, 413))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(625, 625, 625))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBodyTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRespirationRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSystolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSystolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiastolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiastolicPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        boolean isValidated = true;
        String numericRegex = "[1-9][0-9]*";
        if (txtBodyTemp.getText().length() > 0 && txtPulseRate.getText().length() > 0 && txtRespirationRate.getText().length() > 0
                && txtSystolicPressure.getText().length() > 0 && txtDiastolicPressure.getText().length() > 0
                && txtWeight.getText().length() > 0 && txtHeight.getText().length() > 0) {
            if (!Pattern.matches(numericRegex, txtBodyTemp.getText()) && Integer.parseInt(txtBodyTemp.getText()) < 110) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Temperature ", "Invalid Temperature", JOptionPane.WARNING_MESSAGE);
            }

            if (!Pattern.matches(numericRegex, txtPulseRate.getText()) && Integer.parseInt(txtPulseRate.getText()) < 130) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Pulse Rate ", "Invalid Pulse Rate", JOptionPane.WARNING_MESSAGE);
            }

            if (!Pattern.matches(numericRegex, txtRespirationRate.getText()) && Integer.parseInt(txtRespirationRate.getText()) < 50) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Respiration Rate ", "Invalid Respiration Rate", JOptionPane.WARNING_MESSAGE);
            }

            if (!Pattern.matches(numericRegex, txtSystolicPressure.getText())) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Systolic Pressure ", "Invalid Systolic Pressure", JOptionPane.WARNING_MESSAGE);
            }

            if (!Pattern.matches(numericRegex, txtDiastolicPressure.getText())) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Diastolic Pressure ", "Invalid Diastolic Pressure", JOptionPane.WARNING_MESSAGE);
            }

            if (!Pattern.matches(numericRegex, txtWeight.getText())) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Weight ", "Invalid Weight", JOptionPane.WARNING_MESSAGE);
            }

            if (!Pattern.matches(numericRegex, txtHeight.getText())) {
                isValidated = false;
                JOptionPane.showMessageDialog(null, "Please Enter Valid Height ", "Invalid Height", JOptionPane.WARNING_MESSAGE);
            }

            if (isValidated) {
                if (operationId == 0) {
                    VitalSigns vitalSigns = new VitalSigns(Integer.parseInt(txtBodyTemp.getText()), Integer.parseInt(txtPulseRate.getText()), Integer.parseInt(txtRespirationRate.getText()),
                            Integer.parseInt(txtSystolicPressure.getText()), Integer.parseInt(txtDiastolicPressure.getText()), Float.parseFloat(txtWeight.getText()), Float.parseFloat(txtHeight.getText()));
                    Encounter encounter = new Encounter(vitalSigns);
                    patient.getEncounterHistory().getEncounters().add(encounter);
                } else {
                    encounter.getVitalSigns().setBodyTemp(Integer.parseInt(txtBodyTemp.getText()));
                    encounter.getVitalSigns().setPulseRate(Integer.parseInt(txtPulseRate.getText()));
                    encounter.getVitalSigns().setRespirationRate(Integer.parseInt(txtRespirationRate.getText()));
                    encounter.getVitalSigns().setSystolicPressure(Integer.parseInt(txtSystolicPressure.getText()));
                    encounter.getVitalSigns().setDiastolicPressure(Integer.parseInt(txtDiastolicPressure.getText()));
                    encounter.getVitalSigns().setWeight(Float.parseFloat(txtWeight.getText()));
                    encounter.getVitalSigns().setHeight(Float.parseFloat(txtHeight.getText()));
                    encounter.setTimeStamp(Timestamp.from(Instant.now()));
                }
                backAction();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Fill All Fields ", "Empty Fields", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void backAction() {
        displayPanel.remove(this);
        displayPanel.remove(this);
        Component[] componentArray = displayPanel.getComponents();
        Component c = componentArray[componentArray.length - 1];
        ManageEncounterPanel ms = (ManageEncounterPanel) c;
        ms.refreshTable();
        CardLayout layout = (CardLayout) displayPanel.getLayout();
        layout.previous(displayPanel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblBodyTemp;
    private javax.swing.JLabel lblDiastolicPressure;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblPulseRate;
    private javax.swing.JLabel lblRespirationRate;
    private javax.swing.JLabel lblSystolicPressure;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JTextField txtBodyTemp;
    private javax.swing.JTextField txtDiastolicPressure;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtPulseRate;
    private javax.swing.JTextField txtRespirationRate;
    private javax.swing.JTextField txtSystolicPressure;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
